// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: connector.proto

package connectorApi

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectKey    string                 `protobuf:"bytes,1,opt,name=project_key,json=projectKey,proto3" json:"project_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	mi := &file_connector_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connector_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_connector_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateProjectRequest) GetProjectKey() string {
	if x != nil {
		return x.ProjectKey
	}
	return ""
}

type UpdateProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *JiraProject           `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	mi := &file_connector_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connector_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_connector_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateProjectResponse) GetProject() *JiraProject {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *UpdateProjectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectKeys   []string               `protobuf:"bytes,1,rep,name=project_keys,json=projectKeys,proto3" json:"project_keys,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectsRequest) Reset() {
	*x = GetProjectsRequest{}
	mi := &file_connector_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsRequest) ProtoMessage() {}

func (x *GetProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_connector_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsRequest.ProtoReflect.Descriptor instead.
func (*GetProjectsRequest) Descriptor() ([]byte, []int) {
	return file_connector_proto_rawDescGZIP(), []int{2}
}

func (x *GetProjectsRequest) GetProjectKeys() []string {
	if x != nil {
		return x.ProjectKeys
	}
	return nil
}

func (x *GetProjectsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetProjectsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetProjectsRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*JiraProject         `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	PageInfo      *PageInfo              `protobuf:"bytes,2,opt,name=page_info,json=pageInfo,proto3" json:"page_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectsResponse) Reset() {
	*x = GetProjectsResponse{}
	mi := &file_connector_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsResponse) ProtoMessage() {}

func (x *GetProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_connector_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsResponse.ProtoReflect.Descriptor instead.
func (*GetProjectsResponse) Descriptor() ([]byte, []int) {
	return file_connector_proto_rawDescGZIP(), []int{3}
}

func (x *GetProjectsResponse) GetProjects() []*JiraProject {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetProjectsResponse) GetPageInfo() *PageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

type PageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageCount     int32                  `protobuf:"varint,1,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	CurrentPage   int32                  `protobuf:"varint,2,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	ProjectsCount int32                  `protobuf:"varint,3,opt,name=projects_count,json=projectsCount,proto3" json:"projects_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	mi := &file_connector_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_connector_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_connector_proto_rawDescGZIP(), []int{4}
}

func (x *PageInfo) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *PageInfo) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PageInfo) GetProjectsCount() int32 {
	if x != nil {
		return x.ProjectsCount
	}
	return 0
}

type JiraProject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JiraProject) Reset() {
	*x = JiraProject{}
	mi := &file_connector_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JiraProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JiraProject) ProtoMessage() {}

func (x *JiraProject) ProtoReflect() protoreflect.Message {
	mi := &file_connector_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JiraProject.ProtoReflect.Descriptor instead.
func (*JiraProject) Descriptor() ([]byte, []int) {
	return file_connector_proto_rawDescGZIP(), []int{5}
}

func (x *JiraProject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JiraProject) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JiraProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_connector_proto protoreflect.FileDescriptor

const file_connector_proto_rawDesc = "" +
	"\n" +
	"\x0fconnector.proto\x12\x03api\x1a\x1cgoogle/api/annotations.proto\"7\n" +
	"\x14UpdateProjectRequest\x12\x1f\n" +
	"\vproject_key\x18\x01 \x01(\tR\n" +
	"projectKey\"]\n" +
	"\x15UpdateProjectResponse\x12*\n" +
	"\aproject\x18\x01 \x01(\v2\x10.api.JiraProjectR\aproject\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\x80\x01\n" +
	"\x12GetProjectsRequest\x12!\n" +
	"\fproject_keys\x18\x01 \x03(\tR\vprojectKeys\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06search\x18\x04 \x01(\tR\x06search\"o\n" +
	"\x13GetProjectsResponse\x12,\n" +
	"\bprojects\x18\x01 \x03(\v2\x10.api.JiraProjectR\bprojects\x12*\n" +
	"\tpage_info\x18\x02 \x01(\v2\r.api.PageInfoR\bpageInfo\"s\n" +
	"\bPageInfo\x12\x1d\n" +
	"\n" +
	"page_count\x18\x01 \x01(\x05R\tpageCount\x12!\n" +
	"\fcurrent_page\x18\x02 \x01(\x05R\vcurrentPage\x12%\n" +
	"\x0eprojects_count\x18\x03 \x01(\x05R\rprojectsCount\"C\n" +
	"\vJiraProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name2\xe9\x01\n" +
	"\rJiraConnector\x12r\n" +
	"\rUpdateProject\x12\x19.api.UpdateProjectRequest\x1a\x1a.api.UpdateProjectResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/api/v1/connector/updateProject\x12d\n" +
	"\vGetProjects\x12\x17.api.GetProjectsRequest\x1a\x18.api.GetProjectsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1/connector/projectsB\x16Z\x14pkg/api/connectorApib\x06proto3"

var (
	file_connector_proto_rawDescOnce sync.Once
	file_connector_proto_rawDescData []byte
)

func file_connector_proto_rawDescGZIP() []byte {
	file_connector_proto_rawDescOnce.Do(func() {
		file_connector_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_connector_proto_rawDesc), len(file_connector_proto_rawDesc)))
	})
	return file_connector_proto_rawDescData
}

var file_connector_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_connector_proto_goTypes = []any{
	(*UpdateProjectRequest)(nil),  // 0: api.UpdateProjectRequest
	(*UpdateProjectResponse)(nil), // 1: api.UpdateProjectResponse
	(*GetProjectsRequest)(nil),    // 2: api.GetProjectsRequest
	(*GetProjectsResponse)(nil),   // 3: api.GetProjectsResponse
	(*PageInfo)(nil),              // 4: api.PageInfo
	(*JiraProject)(nil),           // 5: api.JiraProject
}
var file_connector_proto_depIdxs = []int32{
	5, // 0: api.UpdateProjectResponse.project:type_name -> api.JiraProject
	5, // 1: api.GetProjectsResponse.projects:type_name -> api.JiraProject
	4, // 2: api.GetProjectsResponse.page_info:type_name -> api.PageInfo
	0, // 3: api.JiraConnector.UpdateProject:input_type -> api.UpdateProjectRequest
	2, // 4: api.JiraConnector.GetProjects:input_type -> api.GetProjectsRequest
	1, // 5: api.JiraConnector.UpdateProject:output_type -> api.UpdateProjectResponse
	3, // 6: api.JiraConnector.GetProjects:output_type -> api.GetProjectsResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_connector_proto_init() }
func file_connector_proto_init() {
	if File_connector_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_connector_proto_rawDesc), len(file_connector_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connector_proto_goTypes,
		DependencyIndexes: file_connector_proto_depIdxs,
		MessageInfos:      file_connector_proto_msgTypes,
	}.Build()
	File_connector_proto = out.File
	file_connector_proto_goTypes = nil
	file_connector_proto_depIdxs = nil
}
