basePath: /api/v1
definitions:
  models.Link:
    properties:
      href:
        type: string
    type: object
  models.PaginatedResponse:
    properties:
      _links:
        $ref: '#/definitions/models.ReferencesLinks'
      data: {}
      pageInfo:
        $ref: '#/definitions/models.Pagination'
    type: object
  models.Pagination:
    properties:
      currentPage:
        type: integer
      pageCount:
        type: integer
      total:
        type: integer
    type: object
  models.ReferencesLinks:
    properties:
      histories:
        items:
          $ref: '#/definitions/models.Link'
        type: array
      issues:
        items:
          $ref: '#/definitions/models.Link'
        type: array
      projects:
        items:
          $ref: '#/definitions/models.Link'
        type: array
      self:
        $ref: '#/definitions/models.Link'
    type: object
  models.Response:
    properties:
      _links:
        $ref: '#/definitions/models.ReferencesLinks'
      data: {}
    type: object
info:
  contact: {}
  description: Swagger API for Golang Project Blueprint.
  license:
    name: MIT
  termsOfService: http://swagger.io/terms/
  title: Resources Swagger API
  version: "1.0"
paths:
  /api/v1//histories/by-issue/{issueId}:
    get:
      description: Возвращает историю изменений для указанной задачи
      parameters:
      - description: ID задачи
        in: path
        name: issueId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Неверный ID задачи
          schema:
            type: string
        "404":
          description: Задача не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить историю изменений задачи
      tags:
      - History
  /api/v1//issues/by-project/{projectId}:
    get:
      description: Возвращает список задач для указанного проекта с пагинацией
      parameters:
      - description: ID проекта
        in: path
        name: projectId
        required: true
        type: integer
      - description: Лимит записей (по умолчанию 20)
        in: query
        name: limit
        type: integer
      - description: Смещение (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse'
        "400":
          description: Неверные параметры запроса
          schema:
            type: string
        "404":
          description: Проект не найден
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить задачи проекта
      tags:
      - Issues
  /api/v1/histories/by-author/{authorId}:
    get:
      description: Возвращает историю изменений, сделанных указанным автором
      parameters:
      - description: ID автора
        in: path
        name: authorId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Неверный ID автора
          schema:
            type: string
        "404":
          description: Автор не найден
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить историю изменений автора
      tags:
      - History
  /api/v1/issues/{id}:
    get:
      description: Возвращает задачу по указанному идентификатору
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Неверный ID задачи
          schema:
            type: string
        "404":
          description: Задача не найдена
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить задачу по ID
      tags:
      - Issues
  /api/v1/projects:
    get:
      description: Возвращает список проектов с пагинацией
      parameters:
      - description: Лимит записей (по умолчанию 20)
        in: query
        name: limit
        type: integer
      - description: Смещение (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить список проектов
      tags:
      - Projects
  /api/v1/projects/{id}:
    delete:
      description: Удаляет проект по указанному идентификатору
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Проект успешно удален
        "400":
          description: Неверный ID проекта
          schema:
            type: string
        "404":
          description: Проект не найден
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Удалить проект
      tags:
      - Projects
    get:
      description: Возвращает проект по указанному идентификатору
      parameters:
      - description: ID проекта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Неверный ID проекта
          schema:
            type: string
        "404":
          description: Проект не найден
          schema:
            type: string
        "500":
          description: Внутренняя ошибка сервера
          schema:
            type: string
      summary: Получить проект по ID
      tags:
      - Projects
swagger: "2.0"
